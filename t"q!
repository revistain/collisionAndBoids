[33mcommit 5cd85f5715299cb345756d4edbf24cbca233280d[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: revistain <kimrobin150@gmail.com>
Date:   Fri Dec 29 08:51:42 2023 +0000

    fixed cohesion

[1mdiff --git a/index.html b/index.html[m
[1mindex 6886b9f..74ba57f 100755[m
[1m--- a/index.html[m
[1m+++ b/index.html[m
[36m@@ -1,14 +1,76 @@[m
[32m+[m[32m<!DOCTYPE html>[m
 <html>[m
[31m-    <head>[m
[31m-        <title>test</title>[m
[31m-    </head>[m
[31m-    <body>[m
[31m-        <canvas width="512" height="512"  style="border:1px solid #000000;"></canvas>[m
[31m-       [m
[31m-        <script src="src/object.js"></script>[m
[31m-        <script src="src/vector.js"></script>[m
[31m-        <script src="src/mouse.js"></script>[m
[31m-        <script src="src/find.js"></script>[m
[31m-        <script src="src/canvas.js"></script>[m
[31m-    </body>[m
[31m-</html>[m
\ No newline at end of file[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta charset="UTF-8">[m
[32m+[m[32m    <title>test</title>[m
[32m+[m[32m    <style>[m
[32m+[m[32m        .slider-container {[m
[32m+[m[32m            display: flex;[m
[32m+[m[32m            gap: 10px;[m
[32m+[m[32m            align-items: center;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        .slider-label {[m
[32m+[m[32m            width: 100px;[m
[32m+[m[32m    </style>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <canvas id="myCanvas" width="512" height="512" style="border:1px solid #000000;"></canvas>[m
[32m+[m[32m    <div class="slider-container">[m
[32m+[m[32m        <div class="slider-label">Alignment:</div>[m
[32m+[m[32m        <input type="range" id="alignSlider" min="0.001" max="0.1" step="0.005" value="0.001">[m
[32m+[m[32m        <span id="alignValue">0.001</span>[m
[32m+[m
[32m+[m[32m        <div class="slider-label">Cohesion:</div>[m
[32m+[m[32m        <input type="range" id="cohesionSlider" min="0.001" max="0.1" step="0.005" value="0.001">[m
[32m+[m[32m        <span id="cohesionValue">0.001</span>[m
[32m+[m
[32m+[m[32m        <div class="slider-label">Separation:</div>[m
[32m+[m[32m        <input type="range" id="separationSlider" min="0.001" max="1" step="0.05" value="0.05">[m
[32m+[m[32m        <span id="separationValue">0.05</span>[m
[32m+[m[32m    </div>[m
[32m+[m
[32m+[m[32m    <script src="src/object.js"></script>[m
[32m+[m[32m    <script src="src/vector.js"></script>[m
[32m+[m[32m    <script src="src/mouse.js"></script>[m
[32m+[m[32m    <script src="src/find.js"></script>[m
[32m+[m[32m    <script src="src/pathfinding.js"></script>[m
[32m+[m[32m    <script src="src/heap.js"></script>[m
[32m+[m[32m    <script src="src/boid.js"></script>[m
[32m+[m[32m    <script src="src/canvas.js"></script>[m
[32m+[m
[32m+[m[32m    <p>Press U to create, Drag to remove!</p>[m
[32m+[m[32m    <button id="gridToggle">Í∑∏Î¶¨Îìú ÌÜ†Í∏Ä</button>[m
[32m+[m[41m    [m
[32m+[m[32m    <script>[m
[32m+[m[32m        const button = document.getElementById('gridToggle');[m
[32m+[m[32m        button.addEventListener('click', () => {[m
[32m+[m[32m            Rect.debugGridOn = !Rect.debugGridOn;[m
[32m+[m[32m            console.log(Rect.debugGridOn);[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        const alignSlider = document.getElementById('alignSlider');[m
[32m+[m[32m        const alignValue = document.getElementById('alignValue');[m
[32m+[m[32m        const cohesionSlider = document.getElementById('cohesionSlider');[m
[32m+[m[32m        const cohesionValue = document.getElementById('cohesionValue');[m
[32m+[m[32m        const separationSlider = document.getElementById('separationSlider');[m
[32m+[m[32m        const separationValue = document.getElementById('separationValue');[m
[32m+[m
[32m+[m[32m        alignSlider.addEventListener('input', () => {[m
[32m+[m[32m            CircleBoid.align = parseFloat(alignSlider.value);[m
[32m+[m[32m            alignValue.innerText = CircleBoid.align;[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        cohesionSlider.addEventListener('input', () => {[m
[32m+[m[32m            CircleBoid.cohesion = parseFloat(cohesionSlider.value);[m
[32m+[m[32m            cohesionValue.innerText = CircleBoid.cohesion;[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        separationSlider.addEventListener('input', () => {[m
[32m+[m[32m            CircleBoid.separation = parseFloat(separationSlider.value);[m
[32m+[m[32m            separationValue.innerText = CircleBoid.separation;[m
[32m+[m[32m        });[m
[32m+[m[32m        // TODO: Ïù∏ÏßÄÍ±∞Î¶¨ÎèÑ Ï∂îÍ∞Ä[m
[32m+[m[32m    </script>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/src/boid.js b/src/boid.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1a8c4b5[m
[1m--- /dev/null[m
[1m+++ b/src/boid.js[m
[36m@@ -0,0 +1,71 @@[m
[32m+[m[32mclass Boid extends Movable{[m
[32m+[m[32m    constructor(pos, align=0.001, cohesion=0.001, separation=0.05) {[m
[32m+[m[32m        const initSpeed = new Vector2(getRandomFloat(0.2, -0.1), getRandomFloat(0.2, -0.1));[m
[32m+[m[32m        super(pos, 6, "circle", "red", initSpeed, 4, new Vector2(0, 0));[m
[32m+[m[32m        this.neighbors = null;[m
[32m+[m[32m        this.congnitive_distance = 50;[m
[32m+[m
[32m+[m[32m        this.align_const = align;[m
[32m+[m[32m        this.cohesion_const = cohesion;[m
[32m+[m[32m        this.separation_const = separation;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    getNeighbors(){[m
[32m+[m[32m        this.neighbors = quadTreeQuery(this.pos.y-this.congnitive_distance,[m
[32m+[m[32m                                       this.pos.x-this.congnitive_distance,[m
[32m+[m[32m                                       this.pos.y+this.congnitive_distance,[m
[32m+[m[32m                                       this.pos.x+this.congnitive_distance);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    move(){[m
[32m+[m[32m        this.getNeighbors();[m
[32m+[m[32m        let align_force = new Vector2(0, 0);[m
[32m+[m[32m        let cohesion_force = new Vector2(0, 0);[m
[32m+[m[32m        for(let near of this.neighbors){[m
[32m+[m[32m            if(near == this) continue;[m
[32m+[m[32m            // alignment[m
[32m+[m[32m            align_force.add(near.currentSpeed);[m
[32m+[m
[32m+[m[32m            // cohesion[m
[32m+[m[32m            cohesion_force.add(near.pos);[m
[32m+[m[32m            cohesion_force.sub(this.pos);[m
[32m+[m
[32m+[m[32m            // separation(Ï†ïÏÑù,slow)[m
[32m+[m[32m            const dist = Math.sqrt((near.pos.x-this.pos.x)*(near.pos.x-this.pos.x) + (near.pos.y-this.pos.y)*(near.pos.y-this.pos.y));[m
[32m+[m[32m            if(dist != 0){[m
[32m+[m[32m                let separation_force = new Vector2(0, 0);[m
[32m+[m[32m                separation_force.add(this.pos);[m
[32m+[m[32m                separation_force.sub(near.pos);[m
[32m+[m[32m                separation_force.mul_var((near.separation_const+this.separation_const)/dist);[m
[32m+[m[32m                this.applyForce(separation_force)[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // alignment[m
[32m+[m[32m        align_force.div_var(this.neighbors.length);[m
[32m+[m[32m        this.applyForce(align_force.mul_var(this.align_const));[m
[32m+[m
[32m+[m[32m        // cohesion[m
[32m+[m[32m        cohesion_force.div_var(this.neighbors.length);[m
[32m+[m[32m        this.applyForce(cohesion_force.mul_var(this.cohesion_const));[m
[32m+[m[41m        [m
[32m+[m[32m        super.move();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mclass CircleBoid extends Boid{[m
[32m+[m[32m    static align = 0.001;[m
[32m+[m[32m    static cohesion = 0.001;[m
[32m+[m[32m    static separation = 0.05;[m
[32m+[m[32m    constructor(pos) {[m
[32m+[m[32m        super(pos, CircleBoid.align, CircleBoid.cohesion, CircleBoid.separation);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    move(){[m
[32m+[m[32m        this.align_const = CircleBoid.align;[m
[32m+[m[32m        this.cohesion_const = CircleBoid.cohesion;[m
[32m+[m[32m        this.separation_const = CircleBoid.separation;[m
[32m+[m[41m        [m
[32m+[m[32m        super.move();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/canvas.js b/src/canvas.js[m
[1mindex 178cafe..9306c2d 100755[m
[1m--- a/src/canvas.js[m
[1m+++ b/src/canvas.js[m
[36m@@ -1,11 +1,18 @@[m
[32m+[m[32mdocument.addEventListener('keydown', function(event) {[m
[32m+[m[32m    if (event.key === 'U' || event.key === 'u') {[m
[32m+[m[41m        [m
[32m+[m[32m        createUnitAtTile(getRandomInt(0, Canvas.instance.tileX - 1), getRandomInt(0,Canvas.instance.tileY - 1));[m
[32m+[m[32m    }[m
[32m+[m[32m });[m
[32m+[m
 class Canvas {[m
     constructor() {[m
         if (!Canvas.instance) Canvas.instance = this;[m
[31m-        this.tileX = 32;[m
[31m-        this.tileY = 32;[m
[32m+[m[32m        this.tileX = 64;[m
[32m+[m[32m        this.tileY = 64;[m
         this.tilePixel = 16;[m
[31m-        this.pixelX = 32*16;[m
[31m-        this.pixelY = 32*16;[m
[32m+[m[32m        this.pixelX = this.tileX*16;[m
[32m+[m[32m        this.pixelY = this.tileY*16;[m
         this.tileType = {[m
             "empty" : 0,[m
             "wall" : 1,[m
[36m@@ -17,6 +24,8 @@[m [mclass Canvas {[m
 [m
         this.canvas = document.querySelector("canvas");[m
         this.ctx = this.canvas.getContext('2d');[m
[32m+[m[32m        this.canvas.width = this.pixelX;[m
[32m+[m[32m        this.canvas.height = this.pixelY;[m
         this.animate = this.animate.bind(this);[m
     }[m
     setCollideMap(typestring, tileX, tileY, amountX, amountY) {[m
[36m@@ -57,7 +66,7 @@[m [mclass Canvas {[m
     }[m
     move(){[m
         for(let movable of Movable.movablelist){[m
[31m-            // movable.applyForce(new Vector2(0.0001, 0.0001));[m
[32m+[m[32m            // movable.applyForce(new Vector2(getRandomFloat(0.2, -0.1), getRandomFloat(0.2, -0.1)));[m
             movable.update();[m
         }[m
     }[m
[36m@@ -65,6 +74,7 @@[m [mclass Canvas {[m
     update() {[m
         this.move();[m
         this.draw();[m
[32m+[m[32m        QuadTree.instance.update();[m
     }[m
 }[m
 [m
[36m@@ -73,8 +83,7 @@[m [mwindow.onload = function() {[m
     const qt = new QuadTree();[m
     const mm = new MouseManager();[m
     [m
[31m-    createUnitAtTile(3, 3);[m
[31m-    createUnitAtTile(3, 14);[m
[32m+[m[32m    // createUnitAtTile(15, 15);[m
     // createWallAtTile(0, 0, 1, 3);[m
     [m
     canvas.startLoop();[m
[36m@@ -84,15 +93,9 @@[m [mfunction getRandomInt(min, max) {[m
     min = Math.ceil(min);[m
     max = Math.floor(max);[m
     return Math.floor(Math.random() * (max - min + 1)) + min;[m
[31m-  }[m
[32m+[m[32m}[m
   [m
[31m-  // Î¨¥ÏûëÏúÑ Ï†ïÏàò xÏôÄ y ÏñªÍ∏∞[m
[31m-  const x = getRandomInt(0, 31);[m
[31m-  const y = getRandomInt(0, 31);[m
[32m+[m[32mfunction getRandomFloat(range, start) {[m
[32m+[m[32m    return Math.random() * range + start;[m
[32m+[m[32m}[m
 [m
[31m-document.addEventListener('keydown', function(event) {[m
[31m-    if (event.key === 'U' || event.key === 'u') {[m
[31m-        [m
[31m-        createUnitAtTile(getRandomInt(0, 31), getRandomInt(0,31));[m
[31m-    }[m
[31m-  });[m
\ No newline at end of file[m
[1mdiff --git a/src/find.js b/src/find.js[m
[1mindex d7cab87..709667a 100644[m
[1m--- a/src/find.js[m
[1m+++ b/src/find.js[m
[36m@@ -3,6 +3,7 @@[m
 // quadtreeÎ•º Íµ¨ÌòÑÌï¥Î≥¥Ïûê[m
 [m
 class Rect extends Drawable{[m
[32m+[m[32m    static debugGridOn = false;[m
     constructor(top=0, left=0, down=0, right=0) {[m
         /////////// for debug draw //////////////[m
         super(new Vector2(top, left), 0, "rect", null, right-left, down-top, false);[m
[36m@@ -14,14 +15,18 @@[m [mclass Rect extends Drawable{[m
         this.halfwidth = (this.right - this.left) >> 1;[m
         this.halfheight = (this.down - this.top) >> 1;[m
         [m
[31m-        this.randomcolorA = Math.random() * 155+100;[m
[31m-        this.randomcolorB = Math.random() * 155+100;[m
[31m-        this.randomcolorC = Math.random() * 155+100;[m
[32m+[m[32m        this.randomcolorA = Math.random() * 155 + 100;[m
[32m+[m[32m        this.randomcolorB = Math.random() * 155 + 100;[m
[32m+[m[32m        this.randomcolorC = Math.random() * 155 + 100;[m
     }[m
[32m+[m
     draw() {[m
[31m-        this.ctx.fillStyle = `rgba(${this.randomcolorA}, ${this.randomcolorB}, ${this.randomcolorC}, 0.2)`;[m
[31m-        this.ctx.strokeRect(this.left, this.top, this.right-this.left, this.down-this.top);[m
[31m-        this.ctx.fillRect(this.left, this.top, this.right-this.left, this.down-this.top);[m
[32m+[m[32m        // ÏÉùÍ∞ÅÎ≥¥Îã§ Í∑∏Î¶¨Îìú Í∑∏Î¶¨ÎäîÍ≤å ÏÑ±Îä•Ïóê ÏòÅÌñ•ÏùÑ ÎßéÏù¥ ÎÅºÏπòÎÑ§[m
[32m+[m[32m        if(Rect.debugGridOn){[m
[32m+[m[32m            this.ctx.fillStyle = `rgba(${this.randomcolorA}, ${this.randomcolorB}, ${this.randomcolorC}, 0.2)`;[m
[32m+[m[32m            this.ctx.strokeRect(this.left, this.top, this.right-this.left, this.down-this.top);[m
[32m+[m[32m            this.ctx.fillRect(this.left, this.top, this.right-this.left, this.down-this.top);[m
[32m+[m[32m        }[m
     }[m
 [m
     includeDrawable(drawable) {[m
[36m@@ -58,19 +63,30 @@[m [mclass QuadTree {[m
     static instance = null;[m
     constructor() {[m
         if(!QuadTree.instance) QuadTree.instance = this;[m
[31m-        this.head = new QuadNode(0, 0, Canvas.instance.pixelX, Canvas.instance.pixelY);[m
[32m+[m[32m        this.head = new QuadNode(0, 0, 0, Canvas.instance.pixelX, Canvas.instance.pixelY);[m
[32m+[m[32m        this.MAX_DEPTH = 6;[m
     }[m
     insert(drawable) {[m
         if(this.head === null) console.log("WHAT??!?!?!");[m
         this.head.findInsert(drawable);[m
     }[m
[31m-[m
[32m+[m[32m    _remove_object(obj){[m
[32m+[m[32m        if(obj.currentQuad === null) return;[m
[32m+[m[32m        removeElemFromList(obj.currentQuad.objects, obj);[m
[32m+[m[32m    }[m
 [m
     _Query(top, left, down, right) {[m
         const found = [];[m
         this.head.query(top, left, down, right, found);[m
         return found;[m
     }[m
[32m+[m[32m    update(){[m
[32m+[m[32m        collectEmptyQuads();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction collectEmptyQuads(){[m
[32m+[m[32m    QuadTree.instance.head._collectnulls();[m
 }[m
 [m
 function quadTreeQuery(top, left, down, right){[m
[36m@@ -79,73 +95,66 @@[m [mfunction quadTreeQuery(top, left, down, right){[m
 [m
 function insertToQuadTree(obj) {[m
     QuadTree.instance.insert(obj);[m
[31m-    console.log("inserted");[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction removeObjectFromQuadTree(obj){[m
[32m+[m[32m    QuadTree.instance._remove_object(obj);[m
 }[m
 [m
 class QuadNode {[m
[31m-    constructor(top, left, down, right) {[m
[32m+[m[32m    constructor(depth, top, left, down, right) {[m
         this.rect = new Rect(top, left, down, right);[m
[31m-        this.count = 0;[m
         this.capacity = 4;[m
         this.firstQuad      = null;[m
         this.secondQuad     = null;[m
         this.thirdQuad      = null;[m
         this.fourthQuad     = null;[m
         [m
[32m+[m[32m        this.depth = depth;[m
         this.isLeaf = true;[m
         this.objects = [];[m
     }[m
[31m-    find(drawable) {[m
[32m+[m[32m    findNode(drawable) {[m
         if(!this.contains(drawable)) return null;[m
         [m
         let ret = null;[m
         if(!this.isLeaf){[m
             let result = null;[m
[31m-            if((result = this.firstQuad.find(drawable)) !== null) ret = result[m
[31m-            if((result = this.secondQuad.find(drawable)) !== null) ret = result[m
[31m-            if((result = this.thirdQuad.find(drawable)) !== null) ret = result[m
[31m-            if((result = this.fourthQuad.find(drawable)) !== null) ret = result[m
[32m+[m[32m            if((result = this.firstQuad.findNode(drawable)) !== null) ret = result[m
[32m+[m[32m            if((result = this.secondQuad.findNode(drawable)) !== null) ret = result[m
[32m+[m[32m            if((result = this.thirdQuad.findNode(drawable)) !== null) ret = result[m
[32m+[m[32m            if((result = this.fourthQuad.findNode(drawable)) !== null) ret = result[m
         }[m
         else if(this.isLeaf) { ret = this; }[m
[31m-        console.log("find: ", ret);[m
         return ret;[m
     }[m
     findInsert(obj){[m
[31m-        const leafNode = this.find(obj);[m
[32m+[m[32m        const leafNode = this.findNode(obj);[m
[32m+[m[32m        obj.currentQuad = leafNode;[m
[32m+[m[41m        [m
         leafNode.objects.push(obj);[m
[31m-        leafNode.count += 1;[m
[31m-        if(leafNode.count >= leafNode.capacity) {[m
[32m+[m[32m        if(this.depth < QuadTree.instance.MAX_DEPTH && leafNode.objects.length >= leafNode.capacity) {[m
             leafNode.subdivide();[m
[31m-            leafNode.count = 0;[m
         }[m
     }[m
     contains(drawable) {[m
         return this.rect.includeDrawable(drawable);[m
     }[m
     subdivide() {[m
[31m-        console.log("objects", this.objects);[m
[31m-        this.firstQuad = new QuadNode(this.rect.top, this.rect.left+this.rect.halfwidth, this.rect.down-this.rect.halfheight, this.rect.right);[m
[31m-        this.secondQuad = new QuadNode(this.rect.top, this.rect.left, this.rect.down-this.rect.halfheight, this.rect.right-this.rect.halfwidth);[m
[31m-        this.thirdQuad = new QuadNode(this.rect.top+this.rect.halfheight, this.rect.left+this.rect.halfwidth, this.rect.down, this.rect.right);[m
[31m-        this.fourthQuad = new QuadNode(this.rect.top+this.rect.halfheight, this.rect.left, this.rect.down, this.rect.right-this.rect.halfwidth); [m
[31m-        console.log(this.firstQuad, this.secondQuad, this.thirdQuad, this.fourthQuad);[m
[32m+[m[32m        this.firstQuad = new QuadNode(this.depth+1, this.rect.top, this.rect.left+this.rect.halfwidth, this.rect.down-this.rect.halfheight, this.rect.right);[m
[32m+[m[32m        this.secondQuad = new QuadNode(this.depth+1, this.rect.top, this.rect.left, this.rect.down-this.rect.halfheight, this.rect.right-this.rect.halfwidth);[m
[32m+[m[32m        this.thirdQuad = new QuadNode(this.depth+1, this.rect.top+this.rect.halfheight, this.rect.left, this.rect.down, this.rect.right-this.rect.halfwidth);[m[41m [m
[32m+[m[32m        this.fourthQuad = new QuadNode(this.depth+1, this.rect.top+this.rect.halfheight, this.rect.left+this.rect.halfwidth, this.rect.down, this.rect.right);[m
         this.isLeaf = false;[m
 [m
         for(let obj of this.objects){[m
[31m-            if(obj !== null) {[m
[31m-                this.findInsert(obj);[m
[31m-            }[m
[32m+[m[32m            this.findInsert(obj);[m
         }[m
         this.objects.length = 0;[m
[31m-        [m
     }[m
     query(top, left, down, right, found_list){[m
         if(!this.rect.intersects(top, left, down, right)) return null;[m
[31m-        console.log("this.objects", this.objects);[m
[31m-        [m
[31m-        [m
         if(!this.isLeaf){[m
[31m-            console.log(this);[m
             this.firstQuad.query(top, left, down, right, found_list);[m
             this.secondQuad.query(top, left, down, right, found_list);[m
             this.thirdQuad.query(top, left, down, right, found_list);[m
[36m@@ -158,4 +167,28 @@[m [mclass QuadNode {[m
         }[m
         return found_list;[m
     }[m
[32m+[m[32m    _collectnulls(){[m
[32m+[m[32m        if(!this.isLeaf){[m
[32m+[m[32m            if(this.firstQuad.objects.length === 0 && this.secondQuad.objects.length === 0 && this.thirdQuad.objects.length === 0 && this.fourthQuad.objects.length === 0[m
[32m+[m[32m              && this.firstQuad.isLeaf && this.secondQuad.isLeaf && this.thirdQuad.isLeaf && this.fourthQuad.isLeaf){[m
[32m+[m[32m                this.firstQuad.rect.remove();[m
[32m+[m[32m                this.secondQuad.rect.remove();[m
[32m+[m[32m                this.thirdQuad.rect.remove();[m
[32m+[m[32m                this.fourthQuad.rect.remove();[m
[32m+[m[32m                this.firstQuad = null;[m
[32m+[m[32m                this.secondQuad = null;[m
[32m+[m[32m                this.thirdQuad = null;[m
[32m+[m[32m                this.fourthQuad = null;[m
[32m+[m[32m                this.isLeaf = true;[m
[32m+[m[32m            }[m
[32m+[m[32m            else{[m
[32m+[m[32m                this.firstQuad = this.firstQuad._collectnulls();[m
[32m+[m[32m                this.secondQuad = this.secondQuad._collectnulls();[m
[32m+[m[32m                this.thirdQuad = this.thirdQuad._collectnulls();[m
[32m+[m[32m                this.fourthQuad = this.fourthQuad._collectnulls();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return this;[m
[32m+[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/heap.js b/src/heap.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1a00513[m
[1m--- /dev/null[m
[1m+++ b/src/heap.js[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32mclass MinHeap {[m
[32m+[m[32m    constructor() {[m
[32m+[m[32m      this.heap = [null];[m
[32m+[m[32m    }[m
[32m+[m[41m  [m
[32m+[m[32m    getMin() {[m
[32m+[m[32m      return this.heap[1];[m
[32m+[m[32m    }[m
[32m+[m[41m  [m
[32m+[m[32m    getSize() {[m
[32m+[m[32m      return this.heap.length - 1;[m
[32m+[m[32m    }[m
[32m+[m[41m  [m
[32m+[m[32m    isEmpty() {[m
[32m+[m[32m      return this.heap.length < 2;[m
[32m+[m[32m    }[m
[32m+[m[41m  [m
[32m+[m[32m    insert(node) {[m
[32m+[m[32m      let current = this.heap.length;[m
[32m+[m[41m  [m
[32m+[m[32m      while (current > 1) {[m
[32m+[m[32m        const parent = Math.floor(current / 2);[m
[32m+[m[32m        if (this.heap[parent] > node) {[m
[32m+[m[32m          this.heap[current] = this.heap[parent];[m
[32m+[m[32m          current = parent;[m
[32m+[m[32m        } else break;[m
[32m+[m[32m      }[m
[32m+[m[41m  [m
[32m+[m[32m      this.heap[current] = node;[m
[32m+[m[32m    }[m
[32m+[m[41m  [m
[32m+[m[32m    remove() {[m
[32m+[m[32m      let min = this.heap[1];[m
[32m+[m[41m  [m
[32m+[m[32m      if (this.heap.length > 2) {[m
[32m+[m[32m        this.heap[1] = this.heap[this.heap.length - 1];[m
[32m+[m[32m        this.heap.splice(this.heap.length - 1);[m
[32m+[m[41m  [m
[32m+[m[32m        let current = 1;[m
[32m+[m[32m        let leftChildIndex = current * 2;[m
[32m+[m[32m        let rightChildIndex = current * 2 + 1;[m
[32m+[m[41m  [m
[32m+[m[32m        while (this.heap[leftChildIndex]) {[m
[32m+[m[32m          let childIndexToCompare = leftChildIndex;[m
[32m+[m[32m          if ([m
[32m+[m[32m            this.heap[rightChildIndex] &&[m
[32m+[m[32m            this.heap[rightChildIndex] < this.heap[childIndexToCompare][m
[32m+[m[32m          )[m
[32m+[m[32m            childIndexToCompare = rightChildIndex;[m
[32m+[m[41m  [m
[32m+[m[32m          if (this.heap[current] > this.heap[childIndexToCompare]) {[m
[32m+[m[32m            [this.heap[current], this.heap[childIndexToCompare]] = [[m
[32m+[m[32m              this.heap[childIndexToCompare],[m
[32m+[m[32m              this.heap[current],[m
[32m+[m[32m            ];[m
[32m+[m[32m            current = childIndexToCompare;[m
[32m+[m[32m          } else break;[m
[32m+[m[41m  [m
[32m+[m[32m          leftChildIndex = current * 2;[m
[32m+[m[32m          rightChildIndex = current * 2 + 1;[m
[32m+[m[32m        }[m
[32m+[m[32m      } else if (this.heap.length === 2) {[m
[32m+[m[32m        this.heap.splice(1, 1);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        return null;[m
[32m+[m[32m      }[m
[32m+[m[41m  [m
[32m+[m[32m      return min;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
\ No newline at end of file[m
[1mdiff --git a/src/mouse.js b/src/mouse.js[m
[1mindex 47ba99d..39dcead 100644[m
[1m--- a/src/mouse.js[m
[1m+++ b/src/mouse.js[m
[36m@@ -1,7 +1,8 @@[m
 class MouseManager extends Drawable{[m
[32m+[m[32m    static selected = [];[m
     constructor() {[m
         super(null, 0, "rect", "black", 0, 0, true);[m
[31m-        [m
[32m+[m
         if (!MouseManager.instance) MouseManager.instance = this;[m
         this.isDragging = false;[m
         this.currentPos = null;[m
[36m@@ -12,6 +13,10 @@[m [mclass MouseManager extends Drawable{[m
             this.pos = this.getMousePosition(event);[m
             this.currentPos = this.pos;[m
             Drawable.drawablelist.push(this);[m
[32m+[m[32m            for(let obj of MouseManager.selected){[m
[32m+[m[32m                obj.color = "red";[m
[32m+[m[32m            }[m
[32m+[m[32m            MouseManager.selected.length = 0;[m
         });[m
 [m
         this.canvas.addEventListener('mousemove', (event) => {[m
[36m@@ -26,10 +31,16 @@[m [mclass MouseManager extends Drawable{[m
         this.canvas.addEventListener('mouseup', () => {[m
             this.stopDraw();[m
             const objs = this.findObjectAtBox();[m
[31m-            console.log("found: ", objs);[m
[31m-            // select units[m
[32m+[m[32m            // Drag removable[m
[32m+[m[32m            // for(let obj of objs){[m
[32m+[m[32m            //     removeObjectFromQuadTree(obj);[m
[32m+[m[32m            //     obj.remove();[m
[32m+[m[32m            // }[m
[32m+[m[41m            [m
             for(let obj of objs){[m
                 obj.color = "blue";[m
[32m+[m[32m                obj.currentSpeed.mul_var(0);[m
[32m+[m[32m                MouseManager.selected.push(obj);[m
             }[m
         });[m
     }[m
[1mdiff --git a/src/object.js b/src/object.js[m
[1mindex 619bafc..ef952bc 100755[m
[1m--- a/src/object.js[m
[1m+++ b/src/object.js[m
[36m@@ -3,7 +3,14 @@[m [mclass Drawable {[m
     static drawablelist = [];[m
     constructor(pos, radius, style, color, width=0, height=0, lazyDraw=false) {[m
         if(!lazyDraw) Drawable.drawablelist.push(this);[m
[31m-        this.pos = pos;[m
[32m+[m[32m        if(pos === null){[m
[32m+[m[32m            this.pos = null;[m
[32m+[m[32m        }[m
[32m+[m[32m        else{[m
[32m+[m[32m            this.pos = pos;[m
[32m+[m[32m            this.pos.x += radius;[m
[32m+[m[32m            this.pos.y += radius;[m
[32m+[m[32m        }[m
         this.radius = radius;[m
         this.style = style;[m
         this.color = color;[m
[36m@@ -43,15 +50,29 @@[m [mclass Movable extends Drawable {[m
         else this.accel = new Vector2(0, 0);[m
         this.moveid = Movable.counter++;[m
         [m
[32m+[m[32m        this.currentQuad = null;[m
         insertToQuadTree(this);[m
     }[m
[32m+[m[32m    moveOfBound(movable){[m
[32m+[m[32m        if(movable.pos.x > Canvas.instance.pixelX) movable.pos.x -= Canvas.instance.pixelX;[m
[32m+[m[32m        else if(movable.pos.x < 0) movable.pos.x += Canvas.instance.pixelX;[m
[32m+[m[32m        if(movable.pos.y > Canvas.instance.pixelY) movable.pos.y -= Canvas.instance.pixelY;[m
[32m+[m[32m        else if(movable.pos.y < 0) movable.pos.y += Canvas.instance.pixelY;[m
[32m+[m
[32m+[m[32m    }[m
     move() {[m
         this.currentSpeed = this.currentSpeed.add(this.accel);[m
         this.currentSpeed.limit(this.maxSpeed);[m
         this.pos.add(this.currentSpeed);[m
[32m+[m[32m        this.moveOfBound(this);[m
[32m+[m[32m        if(!this.currentSpeed.equals(0, 0)){[m
[32m+[m[32m            removeObjectFromQuadTree(this);[m
[32m+[m[32m            insertToQuadTree(this);[m
[32m+[m[32m        }[m
     }[m
     remove() {[m
[31m-        Movable.movablelist = Movable.movablelistfilter(movable => movable.moveid !== this.moveid);[m
[32m+[m[32m        Movable.movablelist = Movable.movablelist.filter(movable => movable.moveid !== this.moveid);[m
[32m+[m[32m        super.remove();[m
     }[m
     applyForce(force) {[m
         this.accel.add(force);[m
[36m@@ -77,7 +98,7 @@[m [mclass Wall extends Drawable {[m
 [m
 function createUnitAtTile(tileX, tileY) {[m
     const createPos = new Vector2(tileX*Canvas.instance.tilePixel, tileY*Canvas.instance.tilePixel);[m
[31m-    return new Unit(createPos);[m
[32m+[m[32m    return new CircleBoid(createPos);[m
 }[m
 [m
 function createWallAtTile(tileX, tileY, amountX, amountY) {[m
[1mdiff --git a/src/pathfinding.js b/src/pathfinding.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/src/vector.js b/src/vector.js[m
[1mindex 6db256c..e6af50f 100755[m
[1m--- a/src/vector.js[m
[1m+++ b/src/vector.js[m
[36m@@ -8,6 +8,9 @@[m [mclass Vector2 {[m
         this.x = x;[m
         this.y = y;[m
     }[m
[32m+[m[32m    equals(x, y){[m
[32m+[m[32m        return (this.x == x && this.y == y);[m
[32m+[m[32m    }[m
     assign(v){[m
         this.x = v.x;[m
         this.y = v.y;[m
[36m@@ -23,14 +26,21 @@[m [mclass Vector2 {[m
         this.y -= v.y;[m
         return this;[m
     }[m
[31m-    mul(scalar) {[m
[31m-        this.x *= v.x;[m
[31m-        this.y *= v.y;[m
[32m+[m[32m    mul_var(scalar) {[m
[32m+[m[32m        this.x *= scalar;[m
[32m+[m[32m        this.y *= scalar;[m
         return this;[m
     }[m
     div(vec){[m
[31m-        this.x /= v.x;[m
[31m-        this.y /= v.y;[m
[32m+[m[32m        if(vec.x === 0 || vec.y === 0) return;[m
[32m+[m[32m        this.x /= vec.x;[m
[32m+[m[32m        this.y /= vec.y;[m
[32m+[m[32m        return this;[m
[32m+[m[32m    }[m
[32m+[m[32m    div_var(scalar){[m
[32m+[m[32m        if(scalar === 0) return;[m
[32m+[m[32m        this.x /= scalar;[m
[32m+[m[32m        this.y /= scalar;[m
         return this;[m
     }[m
     magnitude() {[m
[36m@@ -54,3 +64,10 @@[m [mclass Vector2 {[m
         return mag > 0 ? new Vector2(this.x / mag, this.y / mag) : new Vector2();[m
     }[m
 }[m
[32m+[m
[32m+[m[32mfunction removeElemFromList(array, element) {[m
[32m+[m[32m    const index = array.indexOf(element);[m
[32m+[m[32m    if (index > -1) {[m
[32m+[m[32m        array.splice(index, 1);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
